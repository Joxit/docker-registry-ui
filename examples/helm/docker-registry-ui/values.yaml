# Default values for docker-registry-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


ui:
  # title of the registry
  title: "Docker registry UI"
  # allow delete of images
  delete_images: false
  # UI behave as a proxy of the registry
  proxy: true

  replicaCount: 1
  image:
    registry: docker.io
    repository: joxit/docker-registry-ui
    tag: static
    pullPolicy: Always
  probe:
    liveness: true
    readiness: true

  resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: docker-registry-ui.local

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local


registry:
  external: false
  # URL of the registry (requiered. Note: this wont work as localhost is inside the container. Only used if the registry is external)
  url: http://localhost:5000

  replicaCount: 1
  # Image definition for the registry (Only used if the registry is not external)
  image:
    registry: docker.io
    repository: registry
    tag: 2.7.1
    pullPolicy: Always
  probe:
    liveness: true
    readiness: true
  resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  fullnameOverride: ""


  persistence:
    ## If true, use a Persistent Volume Claim, If false, use emptyDir
    ##
    enabled: false
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ## Persistent Volume Claim annotations
    ##
    annotations:
    ## Persistent Volume Access Mode
    ##
    accessModes:
    # This have to be ReadWriteMany if replicaCount>1
    - ReadWriteOnce
    ## Persistent Volume size
    ##
    size: 1Gi
    ##

  service:
    type: ClusterIP
    port: 5000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: docker-registry.local

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

imagePullSecrets: []
nameOverride: ""
