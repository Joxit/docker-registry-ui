server {
    listen 80;

    #listen              443 ssl;
    #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers         HIGH:!aNULL:!MD5;
    #ssl_certificate     /etc/nginx/certs/fullchain.pem;
    #ssl_certificate_key /etc/nginx/certs/privkey.pem;

    server_name  keycloak.localhost;
    resolver 127.0.0.11 valid=30s ipv6=off;

    charset utf-8;

    rewrite_log on;
    access_log /dev/stdout main;
    error_log /dev/stdout debug;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;
    # required for strict SNI checking: see Issue #70 (https://github.com/Joxit/docker-registry-ui/issues/70)
    proxy_ssl_server_name on;
    proxy_buffering off;
    proxy_ignore_headers "X-Accel-Buffering";

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;

    root   /usr/share/nginx/html;
    index  index.html index.html;

    set $keycloak "http://keycloak:8080";

    location /auth/realms/master/protocol/docker-v2/auth {
        include proxy_params.conf;

        if ($http_origin = ''){
            set $http_origin "*";
        }

        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods 'GET,OPTIONS' always;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,Authorization,Accept,Content-Type,Accept-Language,If-Modified-Since,Cache-Control' always;
        add_header Access-Control-Max-Age 1728000;

        if ($request_method = 'OPTIONS') {
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }

        # By default, keycloak returns 400 instead of 401, we need to change that
        if ($http_authorization = "") {
            add_header WWW-Authenticate 'Basic realm="Keycloak login"' always;
            return 401;
        }

        proxy_pass $keycloak;
    }

    location / {
        include proxy_params.conf;
        proxy_pass $keycloak;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
}

server {
    listen 80;

    #listen              443 ssl;
    #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers         HIGH:!aNULL:!MD5;
    #ssl_certificate     /etc/nginx/certs/fullchain.pem;
    #ssl_certificate_key /etc/nginx/certs/privkey.pem;

    server_name  registry.localhost;
    resolver 127.0.0.11 valid=30s ipv6=off;

    charset utf-8;

    rewrite_log on;
    access_log /dev/stdout main;
    error_log /dev/stdout debug;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;
    # required for strict SNI checking: see Issue #70 (https://github.com/Joxit/docker-registry-ui/issues/70)
    proxy_ssl_server_name on;
    proxy_buffering off;
    proxy_ignore_headers "X-Accel-Buffering";

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    set $registry "https://registry:5000";

    location / {
        include proxy_params.conf;

        # Nginx HTTP bug! So send header manually...
        add_header Access-Control-Expose-Headers 'WWW-Authenticate' always;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Headers 'Authorization,Accept' always;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }

        # Do not allow connections from docker 1.5 and earlier
        # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
            return 404;
        }

        proxy_pass $registry;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
}

server {
    listen 80;

    #listen              443 ssl;
    #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers         HIGH:!aNULL:!MD5;
    #ssl_certificate     /etc/nginx/certs/fullchain.pem;
    #ssl_certificate_key /etc/nginx/certs/privkey.pem;

    server_name  localhost;
    resolver 127.0.0.11 valid=30s ipv6=off;

    charset utf-8;

    rewrite_log on;
    access_log /dev/stdout main;
    error_log /dev/stdout debug;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;
    # required for strict SNI checking: see Issue #70 (https://github.com/Joxit/docker-registry-ui/issues/70)
    proxy_ssl_server_name on;
    proxy_buffering off;
    proxy_ignore_headers "X-Accel-Buffering";

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    set $ui "http://ui";

    location / {
        include proxy_params.conf;
        proxy_pass $ui;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
}

#server {
#  listen 80;
#  location /  {
    # Force HTTPS
#    return 301 https://$host$request_uri;
#  }
#}